`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// Company: 
// Engineer: Yuntong Lu, Haoze Zhang
// 
// Create Date:    15:24:24 09/17/2019 
// Design Name: 
// Module Name:    
// Project Name: 
// Target Devices: 
// Tool versions: 
// Description: 
//
// Dependencies: 
//
// Revision: 
// Revision 0.01 - File Created
// Additional Comments: 
//
//////////////////////////////////////////////////////////////////////////////////
module dataPath (reset, clk, regwrite, Cin, wa, aluop, we_a, 
	we_b, LD_mux_en_a, LD_mux_en_b, pc_en, ld_pc_en,pc_mux);

input clk, regwrite, Cin, reset;
input [3:0] wa;
input [7:0] aluop;
input  we_a, we_b, LD_mux_en_a, LD_mux_en_b, pc_en, ld_pc_en,pc_mux; 
wire [3:0] ra1, ra2;
wire [15:0] wd, rd1, rd2;
wire [4:0] flags_alu;//flags for conditional jump 
wire [15:0] pc_counter,result, addr_a, addr_b;
wire [15:0] q_a, q_b;



//Regfile
regfile Reg(.clk(clk), .regwrite(regwrite), .ra1(ra1), .ra2(ra2), .wa(wa), .wd(wd), .rd1(rd1), .rd2(rd2));


//Memory
Memory Mem(.data_a(rd1), .data_b(rd2), .addr_a(addr_a), .addr_b(addr_b), .we_a(we_a), .we_b(we_b), .clk(clk), .q_a(q_a), .q_b(q_b));


//ALU
alu Alu(.A(rd1), .B(rd2), .Cin(Cin), .aluop(aluop), .ImmLo(ra1), .Flags(flags_alu), .Result(result));

//LD_mux
mux_2to1 mux1(.A(result), .B(q_a), .sel(LD_mux_en_a), .Y(wd));
//mux_2to1 mux1(.A(result), .B(q_b), .sel(LD_mux_en_b), .Y(wd));

//PC_MUX. 
mux_2to1 mux2(.A(ra1),.B(pc_counter), .sel(pc_mux), .Y(addr_a));
//mux_2to1 mux2(.A(ra1),.B(pc_counter), .sel(pc_mux), .Y(addr_b));

//program counter 
pc pc1(.clk(clk), .reset(reset), .pc_en(pc_en),.ld_pc(ra1), .ld_pc_en(ld_pc_en), .pc(pc_counter));
//pc pc1(.clk(clk), .reset(reset), .pc_en(pc_en),.ld_pc(ra2), .ld_pc_en(ld_pc_en), .pc(pc_counter));

endmodule